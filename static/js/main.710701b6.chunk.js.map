{"version":3,"sources":["components/Navbar/Favorite/Favorite.module.css","components/common/Avatar/Avatar.module.css","components/common/Preloader/Preloader.module.css","components/Profile/ProfileUserInfo/ProfileUserInfo.module.css","components/Profile/Profile.module.css","components/Login/Login.module.css","components/Navbar/Navbar.module.css","img/avatar.png","components/common/Avatar/Avatar.tsx","components/common/MyTextarea/MyTextarea.tsx","components/common/Pagination/Pagination.tsx","img/preloader.svg","components/common/Preloader/Preloader.tsx","reduxStore/selectors/profileSelectors.ts","reduxStore/selectors/usersSelectors.ts","img/github.svg","img/gmail.svg","img/linkedin.svg","components/Footer/Footer.tsx","components/Header/Header.tsx","hoc/withLoginRedirect.tsx","components/Login/Login.tsx","components/Music/Music.tsx","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Profile/ProfilePosts/Post/Post.tsx","components/Profile/ProfilePosts/ProfilePosts.tsx","components/Profile/ProfileUserInfo/UserDescription/UserDescription.tsx","components/Profile/ProfileUserInfo/ProfileUserInfo.tsx","components/Profile/Profile.tsx","components/Settings/Settings.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Profile/ProfilePosts/Post/Post.module.css","reduxStore/reducers/appSlice.ts","reduxStore/reducers/authSlice.ts","reduxStore/reducers/dialogsSlice.ts","reduxStore/reducers/profileSlice.ts","reduxStore/reducers/usersSlice.ts","api/api.ts","reduxStore/reducers/thunkCreators/authThunkCreator.ts","reduxStore/reducers/thunkCreators/appThunkCreator.ts","reduxStore/reducers/thunkCreators/profileThunkCreator.ts","reduxStore/reducers/thunkCreators/usersThunkCreator.ts","reduxStore/index.ts","components/common/Pagination/Pagination.module.scss","components/Profile/ProfileUserInfo/UserDescription/UserDescription.module.css","components/common/MyTextarea/MyTextarea.module.css","reduxStore/store.ts","components/Footer/Footer.module.css","components/Header/Header.module.css","components/Profile/ProfilePosts/ProfilePosts.module.css"],"names":["module","exports","Avatar","props","className","classes","avatar","src","photo","alt","MyTextarea","submitForm","validationSchema","yup","shape","messageBody","required","myTextarea","field","initialValues","onSubmit","values","setSubmitting","setTimeout","styles","error","touched","errors","errorField","component","type","name","onChange","handleChange","placeholder","onBlur","handleBlur","button","Pagination","dispatch","useDispatch","totalCount","useSelector","getTotalCount","countItems","getCountItems","selectPage","getSelectPage","pagesCount","Math","ceil","pages","onSelectPage","pageNumber","setPageSelect","getUsersTC","i","push","selectPageClassName","page","concat","pageSpan","onClick","v4","paginationList","map","wrapper","btn","disabled","Preloader","preloader","getProfile","state","profile","userProfile","getProfileStatus","userProfileStatus","getFullName","fullName","getAboutMe","aboutMe","getLookingForAJob","lookingForAJob","getLookingForAJobDescription","lookingForAJobDescription","getContacts","contacts","getPhotoLarge","photos","large","getPhotoSmall","small","getProfilePosts","postsProfile","getUsers","users","totalUsersCount","getIsFetching","isFetching","getFollowingInProcess","followingInProcess","Footer","footer","links","href","rel","target","github","linkedin","gmail","Header","isAuth","auth","login","header","to","logoutUser","mstp","id","compose","Component","connect","restProps","email","password","customClassName","container","rememberMe","onSubmitProps","loginUser","setStatus","isSubmitting","status","form","login_box","checkbox","checkbox__item","container__btn","Music","Navbar","authId","nav","item","isActive","active","News","Post","photoSmall","message","message__item","post","message__like","likes","heartZero","heart","likesCount","ProfilePosts","postsElements","addProfilePost","UserDescription","facebook","instagram","userDescription","textStyle","ProfileUserInfo","photoLarge","useState","editMode","setEditMode","inputStatus","setInputStatus","useEffect","userInfo","value","e","currentTarget","autoFocus","updateUserProfileStatusTC","onDoubleClick","Profile","userId","useParams","getUserProfileTC","getUserProfileStatusTC","Settings","Dialogs","React","lazy","Users","App","initialized","app","initializeApp","fallback","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","renderEntireTree","ReactDOM","render","basename","process","store","document","getElementById","subscribe","appSlice","createSlice","initialState","reducers","initializedSuccess","appSliceReducer","reducer","actions","authSlice","setAuthUserData","action","payload","authSliceReducer","dialogsSlice","contactsData","userName","messagesData","addNewMessage","dialogsSliceReducer","profileSlice","website","vk","twitter","youtube","mainLink","setUserProfile","setUserProfileStatus","profileSliceReducer","updateUsers","actionId","followed","user","usersSlice","follow","unfollow","setUsers","setTotalUsersCount","toggleIsFetching","toggleFollowing","isFollowing","filter","usersSliceReducer","instance","axios","create","withCredentials","baseURL","headers","usersAPI","get","response","data","console","log","delete","profileAPI","put","authAPI","authMe","resultCode","messages","items","followUnfollow","apiMethod","actionCreator","followTC","bind","unfollowTC","configureStore","dialogs"],"mappings":"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","file":"static/js/main.710701b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Favorite_item__BVTUA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__1sxCq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2dvkO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInfo\":\"ProfileUserInfo_userInfo__1S8jl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Login_auth__b-R8p\",\"form\":\"Login_form__2mvFD\",\"login_box\":\"Login_login_box__2KV08\",\"field\":\"Login_field__2H_jd\",\"checkbox\":\"Login_checkbox__3UFrU\",\"container__btn\":\"Login_container__btn__2ICPb\",\"btn\":\"Login_btn__172Gj\",\"error\":\"Login_error__17Wu6\",\"errorField\":\"Login_errorField__2Lw2x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"active\":\"Navbar_active__3mbhk\"};","export default __webpack_public_path__ + \"static/media/avatar.e5117e8e.png\";","import { FC } from 'react'\n\nimport avatar from 'img/avatar.png'\nimport classes from './Avatar.module.css'\n\ninterface IAvatar {\n  photo: null | string\n}\n\nexport const Avatar: FC<IAvatar> = (props) => {\n  return (\n    <div>\n      <img\n        className={classes.avatar}\n        src={props.photo ? props.photo : avatar}\n        alt=\"avatar\"\n      />\n    </div>\n  )\n}\n","import { Field, Form, Formik } from \"formik\";\nimport * as yup from \"yup\";\n\nimport styles from \"./MyTextarea.module.css\";\n\ninterface ITextarea {\n  submitForm: (value: string) => void;\n}\n\nexport const MyTextarea: React.FC<ITextarea> = ({ submitForm }) => {\n  const validationSchema = yup.object().shape({\n    messageBody: yup.string().required(\"✘ the field is empty\"),\n  });\n\n  const myTextarea = (props: any) => {\n    return <textarea {...props.field} {...props} />;\n  };\n\n  return (\n    <Formik\n      initialValues={{ messageBody: \"\" }}\n      onSubmit={(values: { messageBody: string }, { setSubmitting }) => {\n        setTimeout(() => {\n          submitForm(values.messageBody);\n          values.messageBody = \"\";\n          setSubmitting(true);\n        }, 400);\n      }}\n      validationSchema={validationSchema}\n    >\n      {({ ...props }) => (\n        <Form>\n          <div className={styles.error}>\n            {props.touched.messageBody && props.errors.messageBody}\n          </div>\n          <Field\n            className={\n              props.errors.messageBody\n                ? styles.myTextarea + \" \" + styles.errorField\n                : styles.myTextarea\n            }\n            component={myTextarea}\n            type=\"text\"\n            name=\"messageBody\"\n            onChange={props.handleChange}\n            placeholder=\"Your message...\"\n            onBlur={props.handleBlur}\n          />\n          <button className={styles.button} type=\"submit\">\n            Send Message\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { v4 } from \"uuid\";\n\nimport {\n  AppDispatch,\n  getCountItems,\n  getSelectPage,\n  getTotalCount,\n  getUsersTC,\n  setPageSelect,\n} from \"reduxStore\";\n\nimport styles from \"./Pagination.module.scss\";\n\nexport const Pagination = () => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const totalCount = useSelector(getTotalCount);\n  const countItems = useSelector(getCountItems);\n  const selectPage = useSelector(getSelectPage);\n\n  const pagesCount = Math.ceil(totalCount / countItems);\n  const pages: number[] = [];\n\n  const onSelectPage = (pageNumber: number) => {\n    dispatch(setPageSelect(pageNumber));\n    dispatch(getUsersTC(pageNumber, countItems));\n  };\n\n  for (let i = 0; i < pagesCount; i++) {\n    pages.push(i + 1);\n  }\n\n  const selectPageClassName = (page: number) => {\n    return page === selectPage\n      ? styles.selectPage.concat(\" \", styles.pages)\n      : styles.pages;\n  };\n\n  const pageSpan = (page: number) => {\n    return (\n      <span\n        key={v4()}\n        onClick={() => onSelectPage(page)}\n        className={selectPageClassName(page)}\n      >\n        {page}\n      </span>\n    );\n  };\n\n  const paginationList = pages.map((page: number) => {\n    if (page < 10 && selectPage < 5) {\n      return pageSpan(page);\n    } else if (page > selectPage - 5 && page < selectPage + 5) {\n      return pageSpan(page);\n    }\n  });\n\n  const showLeftButton = () => {\n    return selectPage === 1 ? true : false;\n  };\n  const showRightButton = () => {\n    return selectPage === pagesCount ? true : false;\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <button\n        className={styles.btn}\n        onClick={() => onSelectPage(1)}\n        disabled={showLeftButton()}\n      >\n        ❮❮\n      </button>\n      <div> {paginationList}</div>\n      <button\n        className={styles.btn}\n        onClick={() => onSelectPage(pagesCount)}\n        disabled={showRightButton()}\n      >\n        ❯❯\n      </button>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/preloader.308910bd.svg\";","import styles from \"./Preloader.module.css\";\nimport preloader from \"img/preloader.svg\";\n\nexport const Preloader = () => {\n\treturn (\n\t\t<div className={styles.preloader}>\n\t\t\t<img src={preloader} alt=\"preloader\" />\n\t\t</div>\n\t);\n};\n","import { AppRootState } from \"../store\";\n\nexport const getProfile = (state: AppRootState) => state.profile.userProfile;\n\nexport const getProfileStatus = (state: AppRootState) =>\n  state.profile.userProfileStatus;\n\n// User profile\nexport const getFullName = (state: AppRootState) =>\n  state.profile.userProfile.fullName;\n\nexport const getAboutMe = (state: AppRootState) =>\n  state.profile.userProfile.aboutMe;\n\nexport const getLookingForAJob = (state: AppRootState) =>\n  state.profile.userProfile.lookingForAJob;\n\nexport const getLookingForAJobDescription = (state: AppRootState) =>\n  state.profile.userProfile.lookingForAJobDescription;\n\nexport const getContacts = (state: AppRootState) =>\n  state.profile.userProfile.contacts;\n\nexport const getPhotoLarge = (state: AppRootState) =>\n  state.profile.userProfile.photos.large;\n\nexport const getPhotoSmall = (state: AppRootState) =>\n  state.profile.userProfile.photos.small;\n\n// Profile posts\nexport const getProfilePosts = (state: AppRootState) =>\n  state.profile.postsProfile;\n","import { AppRootState } from '../store';\n\nexport const getUsers = (state: AppRootState) => state.users.users;\n\nexport const getTotalCount = (state: AppRootState) =>\n  state.users.totalUsersCount;\n\nexport const getCountItems = (state: AppRootState) => state.users.countItems;\n\nexport const getSelectPage = (state: AppRootState) => state.users.selectPage;\n\nexport const getIsFetching = (state: AppRootState) => state.users.isFetching;\n\nexport const getFollowingInProcess = (state: AppRootState) =>\n  state.users.followingInProcess;\n\nexport const getIsAuth = (state: AppRootState) => state.auth.isAuth;\n","export default __webpack_public_path__ + \"static/media/github.db432c59.svg\";","export default __webpack_public_path__ + \"static/media/gmail.064eff08.svg\";","export default __webpack_public_path__ + \"static/media/linkedin.dd5412fb.svg\";","import github from \"img/github.svg\";\nimport gmail from \"img/gmail.svg\";\nimport linkedin from \"img/linkedin.svg\";\nimport styles from \"./Footer.module.css\";\n\nconst Footer = () => {\n  return (\n    <div className={styles.footer}>\n      <div className={styles.links}>\n        <a\n          href=\"https://github.com/8bitnikita\"\n          rel=\"noreferrer\"\n          target=\"_blank\"\n        >\n          <img src={github} alt=\"github-logo\" />\n          <div>My GitHub</div>\n        </a>\n      </div>\n      <div className={styles.links}>\n        <a\n          href=\"https://www.linkedin.com/in/8bitnikita/\"\n          rel=\"noreferrer\"\n          target=\"_blank\"\n        >\n          <img src={linkedin} alt=\"linkedin-logo\" />\n          <div>My Linkedin</div>\n        </a>\n      </div>\n      <div className={styles.links}>\n        <a\n          href=\"mailto:nikita.ganzha.job@gmail.com\"\n          rel=\"noreferrer\"\n          target=\"_blank\"\n        >\n          <img src={gmail} alt=\"gmail-logo\" />\n          <div>My Gmail</div>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { logoutUser, AppRootState } from \"reduxStore\";\nimport classes from \"./Header.module.css\";\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const isAuth = useSelector((state: AppRootState) => state.auth.isAuth);\n  const login = useSelector((state: AppRootState) => state.auth.login);\n\n  return (\n    <header className={classes.header}>\n      Facepalm\n      <div className={classes.login}>\n        {isAuth ? (\n          <div>\n            {login} |{\" \"}\n            <NavLink to=\"/login\" onClick={() => dispatch(logoutUser())}>\n              Logout\n            </NavLink>\n          </div>\n        ) : (\n          <NavLink to=\"/login\">Login</NavLink>\n        )}\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { AppRootState } from \"reduxStore/store\";\n\ntype mstpType = {\n  id: number | null;\n};\n\nconst mstp = (state: AppRootState): mstpType => {\n  return {\n    id: state.auth.id,\n  };\n};\n\nexport function withLoginRedirect<T extends object>(\n  Component: React.ComponentType<T>\n) {\n  const RedirectComponent: React.FC<mstpType> = (props) => {\n    let { id, ...restProps } = props;\n\n    if (id) return <Navigate to={`/profile/${id}`} />;\n    return <Component {...(restProps as T)} />;\n  };\n\n  return connect(mstp)(RedirectComponent);\n}\n","import { Field, Form, Formik } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { compose } from \"redux\";\nimport * as yup from \"yup\";\n\nimport { withLoginRedirect } from \"hoc/withLoginRedirect\";\nimport { loginUser, AppDispatch } from \"reduxStore\";\nimport { ILoginValues } from \"types\";\n\nimport styles from \"./Login.module.css\";\n\nconst Login = () => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const validationSchema = yup.object().shape({\n    email: yup\n      .string()\n      .email(\"please enter a valid email\")\n      .required(\"✘ the field is empty\"),\n    password: yup.string().required(\"✘ the field is empty!\"),\n  });\n\n  const customClassName = (\n    touched: boolean | undefined,\n    errors: string | undefined\n  ) => {\n    return touched && errors\n      ? styles.field + \" \" + styles.errorField\n      : styles.field;\n  };\n\n  return (\n    <div className={styles.container}>\n      <h2 className={styles.auth}>authorization</h2>\n      <Formik\n        initialValues={{ email: \"\", password: \"\", rememberMe: false }}\n        onSubmit={(values: ILoginValues, onSubmitProps) => {\n          dispatch(\n            loginUser(\n              values.email,\n              values.password,\n              values.rememberMe,\n              onSubmitProps.setStatus\n            )\n          );\n          onSubmitProps.setSubmitting(true);\n        }}\n        validationSchema={validationSchema}\n      >\n        {({ errors, touched, isSubmitting, status }) => (\n          <Form className={styles.form}>\n            <div className={styles.login_box}>\n              <div>Email:</div>\n              <Field\n                className={customClassName(touched.email, errors.email)}\n                type=\"email\"\n                name=\"email\"\n              />\n              <div className={styles.error}>\n                {touched.email && errors.email}\n              </div>\n            </div>\n            <div className={styles.login_box}>\n              <div>Password:</div>\n              <Field\n                className={customClassName(touched.password, errors.password)}\n                type=\"password\"\n                name=\"password\"\n              />\n              <div className={styles.error}>\n                {touched.password && errors.password}\n                {status}\n              </div>\n            </div>\n            <div className={styles.checkbox}>\n              <div className={styles.checkbox__item}>\n                <Field type=\"checkbox\" name=\"rememberMe\" />\n                Remember me\n              </div>\n            </div>\n            <div className={styles.container__btn}>\n              <button\n                className={styles.btn}\n                type=\"submit\"\n                disabled={isSubmitting}\n              >\n                Submit\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default compose<React.ComponentType>(withLoginRedirect)(Login);\n","import classes from \"./Music.module.css\";\n\nconst Music = () => {\n  return <div>Music</div>;\n};\n\nexport default Music;\n","import { useSelector } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { AppRootState } from \"reduxStore/store\";\nimport classes from \"./Navbar.module.css\";\n\nconst Navbar = () => {\n  const authId = useSelector((state: AppRootState) => state.auth.id);\n\n  return (\n    <nav className={classes.nav}>\n      <div className={classes.item}>\n        <NavLink\n          to={`/profile/${authId}`}\n          className={({ isActive }) => {\n            return isActive ? classes.active : \"\";\n          }}\n        >\n          Profile\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink\n          to={\"/messages\"}\n          className={({ isActive }) => {\n            return isActive ? classes.active : \"\";\n          }}\n        >\n          Messages\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink\n          to={\"/users\"}\n          className={({ isActive }) => {\n            return isActive ? classes.active : \"\";\n          }}\n        >\n          Users\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink\n          to={\"/news\"}\n          className={({ isActive }) => {\n            return isActive ? classes.active : \"\";\n          }}\n        >\n          News\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink\n          to={\"/music\"}\n          className={({ isActive }) => {\n            return isActive ? classes.active : \"\";\n          }}\n        >\n          Music\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink\n          to={\"/settings\"}\n          className={({ isActive }) => {\n            return isActive ? classes.active : \"\";\n          }}\n        >\n          Settings\n        </NavLink>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","const News = () => {\n  return <div>News</div>;\n};\n\nexport default News;\n","import { useSelector } from \"react-redux\";\n\nimport { getPhotoSmall } from \"reduxStore/selectors\";\nimport { Avatar } from \"components/common\";\nimport { IPost } from \"types\";\n\nimport styles from \"./Post.module.css\";\n\nexport const Post: React.FC<IPost> = (props) => {\n  const photoSmall = useSelector(getPhotoSmall);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.avatar}>\n        <Avatar photo={photoSmall} />\n      </div>\n      <div className={styles.message} key={props.id}>\n        <div className={styles.message__item}>{props.post}</div>\n        <div className={styles.message__like}>\n          <span className={props.likes === 0 ? styles.heartZero : styles.heart}>\n            ♥\n          </span>{\" \"}\n          <span className={styles.likesCount}>{props.likes}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useDispatch, useSelector } from \"react-redux\";\n\nimport { addProfilePost, getProfilePosts, AppDispatch } from \"reduxStore\";\nimport { MyTextarea } from \"components/common\";\nimport { Post } from \"./Post\";\nimport { IPost } from \"types\";\n\nimport styles from \"./ProfilePosts.module.css\";\n\nexport const ProfilePosts = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const profilePosts = useSelector(getProfilePosts);\n\n  const addPost = (message: string) => dispatch(addProfilePost(message));\n\n  const postsElements = profilePosts.map((post: IPost) => (\n    <Post key={post.id} {...post} />\n  ));\n\n  return (\n    <div className={styles.container}>\n      <MyTextarea submitForm={addPost} />\n      <div className={styles.postsElements}>{postsElements}</div>\n    </div>\n  );\n};\n","import { useSelector } from \"react-redux\";\n\nimport {\n  getAboutMe,\n  getContacts,\n  getFullName,\n  getLookingForAJob,\n  getLookingForAJobDescription,\n} from \"reduxStore/selectors\";\nimport classes from \"./UserDescription.module.css\";\n\nexport const UserDescription = () => {\n  const fullName = useSelector(getFullName);\n  const aboutMe = useSelector(getAboutMe);\n  const lookingForAJob = useSelector(getLookingForAJob);\n  const lookingForAJobDescription = useSelector(getLookingForAJobDescription);\n  const { facebook, instagram, github } = useSelector(getContacts);\n\n  return (\n    <div className={classes.userDescription}>\n      <div>\n        <div>\n          <span className={classes.textStyle}>Name: </span>\n          {fullName}\n        </div>\n        <div>\n          <span className={classes.textStyle}>About me: </span>\n          {aboutMe}\n        </div>\n        <div>\n          <span className={classes.textStyle}>Open to work: </span>\n          {lookingForAJob ? lookingForAJobDescription : \"Not looking for a job\"}\n        </div>\n        <div>\n          <span className={classes.textStyle}>Country: </span>\n          Ukraine\n        </div>\n        <div>\n          <span className={classes.textStyle}>Contacts: </span>\n          <a href={facebook ? facebook : \"https://facebook.com\"}>facebook </a>\n          <a href={instagram ? instagram : \"https://instagram.com\"}>\n            instagram{\" \"}\n          </a>\n          <a href={github ? github : \"https://github.com\"}>github</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { ChangeEvent, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  getPhotoLarge,\n  getProfile,\n  getProfileStatus,\n  updateUserProfileStatusTC,\n} from \"reduxStore\";\nimport { Avatar, Preloader } from \"components/common\";\nimport { UserDescription } from \"./UserDescription\";\n\nimport classes from \"./ProfileUserInfo.module.css\";\n\nexport const ProfileUserInfo = () => {\n  const dispatch = useDispatch();\n  const photoLarge = useSelector(getPhotoLarge);\n  const profile = useSelector(getProfile);\n  const userProfileStatus = useSelector(getProfileStatus);\n\n  const [editMode, setEditMode] = useState(false);\n  const [inputStatus, setInputStatus] = useState(userProfileStatus);\n\n  useEffect(() => {\n    setInputStatus(userProfileStatus);\n  }, [userProfileStatus]);\n\n  const editModeON = () => {\n    setEditMode(true);\n  };\n\n  const editModeOFF = () => {\n    setEditMode(false);\n    dispatch(updateUserProfileStatusTC(inputStatus));\n  };\n\n  const changeInputStatus = (e: ChangeEvent<HTMLInputElement>) => {\n    setInputStatus(e.currentTarget.value);\n  };\n\n  if (!profile) {\n    return <Preloader />;\n  }\n\n  return (\n    <div>\n      <div className={classes.userInfo}>\n        <Avatar photo={photoLarge} />\n        <UserDescription />\n      </div>\n      <div>\n        {editMode ? (\n          <input\n            value={inputStatus}\n            onChange={changeInputStatus}\n            autoFocus\n            onBlur={editModeOFF}\n          />\n        ) : (\n          <span onDoubleClick={editModeON}>\n            {userProfileStatus || \"Double click, to write your status\"}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nimport { getUserProfileStatusTC, getUserProfileTC } from \"reduxStore\";\nimport { ProfilePosts } from \"./ProfilePosts\";\nimport { ProfileUserInfo } from \"./ProfileUserInfo\";\n\nimport classes from \"./Profile.module.css\";\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const { userId } = useParams();\n\n  useEffect(() => {\n    dispatch(getUserProfileTC(userId));\n    dispatch(getUserProfileStatusTC(userId));\n  }, []);\n\n  return (\n    <div className={classes.profile}>\n      <ProfileUserInfo />\n      <ProfilePosts />\n    </div>\n  );\n};\n\nexport default Profile;\n","import classes from \"./News.module.css\";\n\nconst Settings = () => {\n  return <div>Settings</div>;\n};\n\nexport default Settings;\n","import React, { Suspense } from \"react\";\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Route, Routes } from \"react-router-dom\";\n\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport Login from \"./components/Login\";\nimport Music from \"./components/Music\";\nimport Navbar from \"./components/Navbar\";\nimport News from \"./components/News\";\nimport Profile from \"./components/Profile\";\nimport Settings from \"./components/Settings\";\nimport { Preloader } from \"./components/common\";\nimport { initializeApp, AppDispatch, AppRootState } from \"./reduxStore\";\n\nimport \"./App.css\";\n\nconst Dialogs = React.lazy(() => import(\"./components/Dialogs\"));\nconst Users = React.lazy(() => import(\"./components/Users\"));\n\nconst App = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const initialized = useSelector(\n    (state: AppRootState) => state.app.initialized\n  );\n\n  useEffect(() => {\n    dispatch(initializeApp());\n  }, []);\n\n  if (!initialized) {\n    return <Preloader />;\n  }\n\n  return (\n    <div className=\"app-wrapper\">\n      <Header />\n      <Navbar />\n      <div className=\"app-wrapper-content\">\n        <Suspense fallback={<Preloader />}>\n          <Routes>\n            <Route path=\"/profile/:userId\" element={<Profile />} />\n            <Route path=\"/messages\" element={<Dialogs />} />\n            <Route path=\"/users\" element={<Users />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/news\" element={<News />} />\n            <Route path=\"/music\" element={<Music />} />\n            <Route path=\"/settings\" element={<Settings />} />\n          </Routes>\n        </Suspense>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport { store } from \"reduxStore/store\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst renderEntireTree = () => {\n  ReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n};\n\nrenderEntireTree();\nstore.subscribe(() => {\n  renderEntireTree();\n});\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Post_container__2rmxr\",\"message\":\"Post_message__3yjhb\",\"avatar\":\"Post_avatar__3VCpd\",\"message__like\":\"Post_message__like__1NTdR\",\"heart\":\"Post_heart__3mleu\",\"heartZero\":\"Post_heartZero__1YMBv\",\"likesCount\":\"Post_likesCount__dbgCO\"};","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport type authType = {\n  initialized: boolean;\n};\n\nconst initialState: authType = {\n  initialized: false,\n};\n\nconst appSlice = createSlice({\n  name: \"app\",\n  initialState,\n  reducers: {\n    initializedSuccess(state) {\n      state.initialized = true;\n    },\n  },\n});\n\nexport const appSliceReducer = appSlice.reducer;\n\nexport const { initializedSuccess } = appSlice.actions;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { IAuth } from \"types\";\n\nconst initialState: IAuth = {\n  id: null,\n  email: null,\n  login: null,\n  isAuth: false,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setAuthUserData(state, action: PayloadAction<IAuth>) {\n      const { id, email, login, isAuth } = action.payload;\n      state.id = id;\n      state.email = email;\n      state.login = login;\n      state.isAuth = isAuth;\n    },\n  },\n});\n\nexport const authSliceReducer = authSlice.reducer;\n\nexport const { setAuthUserData } = authSlice.actions;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { IDialogs } from \"types\";\n\nconst initialState: IDialogs = {\n  contactsData: [\n    { id: 1, userName: \"Tommy\" },\n    { id: 2, userName: \"John Wick\" },\n    { id: 3, userName: \"Izabella\" },\n    { id: 4, userName: \"Garold\" },\n    { id: 5, userName: \"Hillary\" },\n    { id: 6, userName: \"Antoine\" },\n    { id: 7, userName: \"Ludwig\" },\n    { id: 8, userName: \"Anna Lee\" },\n  ],\n  messagesData: [\n    { id: 1, message: \"Hello!\" },\n    { id: 2, message: \"How are you?\" },\n    { id: 3, message: \"Lets go!\" },\n    { id: 4, message: \"Nice to meet you.\" },\n  ],\n};\n\nconst dialogsSlice = createSlice({\n  name: \"dialogs\",\n  initialState,\n  reducers: {\n    addNewMessage(state, action: PayloadAction<string>) {\n      state.messagesData.push({ id: 5, message: action.payload });\n    },\n  },\n});\n\nexport const dialogsSliceReducer = dialogsSlice.reducer;\n\nexport const { addNewMessage } = dialogsSlice.actions;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { IProfileState, IUserProfile } from \"types\";\n\nconst initialState: IProfileState = {\n  postsProfile: [\n    {\n      id: 1,\n      post: \"Lorem ipsum dolor, sit amet consectetur adipisicing.\",\n      likes: 15,\n    },\n    {\n      id: 2,\n      post: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Minus reiciendis et nam assumenda soluta est!\",\n      likes: 0,\n    },\n    { id: 3, post: \"Lorem ipsum dolor sit amet.\", likes: 370 },\n    {\n      id: 4,\n      post: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Eaque, deleniti.\",\n      likes: 3,\n    },\n  ],\n  userProfile: {\n    aboutMe: \"\",\n    contacts: {\n      facebook: null,\n      website: null,\n      vk: null,\n      twitter: null,\n      instagram: null,\n      youtube: null,\n      github: null,\n      mainLink: null,\n    },\n    lookingForAJob: false,\n    lookingForAJobDescription: null,\n    fullName: \"\",\n    userId: 3,\n    photos: {\n      small: \"\",\n      large: \"\",\n    },\n  },\n  userProfileStatus: \"\",\n};\n\nconst profileSlice = createSlice({\n  name: \"profile\",\n  initialState,\n  reducers: {\n    addProfilePost(state, action: PayloadAction<string>) {\n      state.postsProfile.push({ id: 5, post: action.payload, likes: 0 });\n    },\n    setUserProfile(state, action: PayloadAction<IUserProfile>) {\n      state.userProfile = action.payload;\n    },\n    setUserProfileStatus(state, action: PayloadAction<string>) {\n      state.userProfileStatus = action.payload;\n    },\n  },\n});\n\nexport const profileSliceReducer = profileSlice.reducer;\n\nexport const { addProfilePost, setUserProfile, setUserProfileStatus } =\n  profileSlice.actions;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { IUser, IUserState } from \"types\";\n\nconst initialState: IUserState = {\n  users: [],\n  totalUsersCount: 0,\n  countItems: 10,\n  selectPage: 1,\n  isFetching: true,\n  followingInProcess: [],\n};\n\nconst updateUsers = (users: IUser[], actionId: number, followed: boolean) => {\n  return users.map((user: IUser) => {\n    if (user.id === actionId) {\n      return { ...user, followed };\n    }\n    return user;\n  });\n};\n\nconst usersSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {\n    follow(state, action: PayloadAction<number>) {\n      state.users = updateUsers(state.users, action.payload, true);\n    },\n    unfollow(state, action: PayloadAction<number>) {\n      state.users = updateUsers(state.users, action.payload, false);\n    },\n    setUsers(state, action: PayloadAction<IUser[]>) {\n      state.users = action.payload;\n    },\n    setPageSelect(state, action: PayloadAction<number>) {\n      state.selectPage = action.payload;\n    },\n    setTotalUsersCount(state, action: PayloadAction<number>) {\n      state.totalUsersCount = action.payload;\n    },\n    toggleIsFetching(state, action: PayloadAction<boolean>) {\n      state.isFetching = action.payload;\n    },\n    toggleFollowing(\n      state,\n      action: PayloadAction<{ isFollowing: boolean; userId: number }>\n    ) {\n      state.followingInProcess = [];\n      action.payload.isFollowing\n        ? state.followingInProcess.push(action.payload.userId)\n        : state.followingInProcess.filter((id) => id !== action.payload.userId);\n    },\n  },\n});\n\nexport const usersSliceReducer = usersSlice.reducer;\n\nexport const {\n  follow,\n  unfollow,\n  setUsers,\n  setPageSelect,\n  setTotalUsersCount,\n  toggleIsFetching,\n  toggleFollowing,\n} = usersSlice.actions;\n","import axios from \"axios\";\n\nimport { IAuthAPI, IProfileAPI, IUserAPI } from \"types\";\n\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n  headers: {\n    \"API-KEY\": \"46f6da70-f2b2-4636-a8db-3bdd6ce08cf0\",\n  },\n});\n\nexport const usersAPI: IUserAPI = {\n  async getUsers(selectPage: number, countItems: number) {\n    const response = await instance.get(\n      `users?page=${selectPage}&count=${countItems}`\n    );\n\n    return response.data;\n  },\n  async follow(userId: string | undefined) {\n    const response = await instance.post(`follow/${userId}`);\n    console.log(response.data);\n    return response.data;\n  },\n\n  async unfollow(userId: string | undefined) {\n    const response = await instance.delete(`follow/${userId}`);\n    return response.data;\n  },\n};\n\nexport const profileAPI: IProfileAPI = {\n  async getProfile(userId: string | undefined) {\n    const response = await instance.get(`profile/${userId}`);\n    return response.data;\n  },\n\n  async getStatus(userId: string | undefined) {\n    const response = await instance.get(`profile/status/${userId}`);\n    return response.data;\n  },\n\n  async putStatus(status: string) {\n    return await instance.put(`profile/status/`, { status });\n  },\n};\n\nexport const authAPI: IAuthAPI = {\n  async me() {\n    const response = await instance.get(`auth/me`);\n    return response.data;\n  },\n\n  async login(email: string, password: string, rememberMe: boolean) {\n    const response = await instance.post(`auth/login`, {\n      email,\n      password,\n      rememberMe,\n    });\n    return response.data;\n  },\n\n  async logout() {\n    const response = await instance.delete(`auth/login`);\n    return response.data;\n  },\n};\n","import { authAPI } from \"api\";\nimport { setAuthUserData, AppDispatch } from \"reduxStore\";\n\nexport const authMe = () => async (dispatch: AppDispatch) => {\n  const data = await authAPI.me();\n  if (data.resultCode === 0) {\n    const { id, email, login } = data.data;\n    dispatch(setAuthUserData({ id, email, login, isAuth: true }));\n  }\n};\n\nexport const loginUser =\n  (\n    email: string,\n    password: string,\n    rememberMe: boolean,\n    setStatus: (message: string) => void\n  ) =>\n    async (dispatch: AppDispatch) => {\n      const data = await authAPI.login(email, password, rememberMe);\n      if (data.resultCode === 0) {\n        dispatch(authMe());\n      } else {\n        setStatus(data.messages);\n      }\n    };\n\nexport const logoutUser = () => async (dispatch: AppDispatch) => {\n  const data = await authAPI.logout();\n  if (data.resultCode === 0) {\n    dispatch(\n      setAuthUserData({ id: null, email: null, login: null, isAuth: false })\n    );\n  }\n};\n","import { initializedSuccess, AppDispatch } from \"reduxStore\";\nimport { authMe } from \"./authThunkCreator\";\n\nexport const initializeApp = () => async (dispatch: AppDispatch) => {\n  await dispatch(authMe());\n  dispatch(initializedSuccess());\n};\n","import { profileAPI } from \"api\";\nimport { setUserProfile, setUserProfileStatus, AppDispatch } from \"reduxStore\";\n\nexport const getUserProfileTC =\n  (userId: string | undefined) => async (dispatch: AppDispatch) => {\n    const data = await profileAPI.getProfile(userId);\n    dispatch(setUserProfile(data));\n  };\n\nexport const getUserProfileStatusTC =\n  (userId: string | undefined) => async (dispatch: AppDispatch) => {\n    const data = await profileAPI.getStatus(userId);\n    dispatch(setUserProfileStatus(data));\n  };\n\nexport const updateUserProfileStatusTC =\n  (status: string) => async (dispatch: AppDispatch) => {\n    await profileAPI.putStatus(status);\n    dispatch(setUserProfileStatus(status));\n  };\n","import { usersAPI } from \"api\";\nimport { actionCreatorType } from \"types\";\nimport {\n  follow,\n  setTotalUsersCount,\n  setUsers,\n  toggleFollowing,\n  toggleIsFetching,\n  unfollow,\n  AppDispatch,\n} from \"reduxStore\";\n\nexport const getUsersTC =\n  (selectPage: number, countItems: number) => async (dispatch: AppDispatch) => {\n    dispatch(toggleIsFetching(true));\n    const data = await usersAPI.getUsers(selectPage, countItems);\n    dispatch(toggleIsFetching(false));\n    dispatch(setUsers(data.items));\n    dispatch(setTotalUsersCount(data.totalCount));\n  };\n\nconst followUnfollow = async (\n  dispatch: AppDispatch,\n  userId: number,\n  apiMethod: Function,\n  actionCreator: actionCreatorType\n) => {\n  const data = await apiMethod(userId);\n  if (data.resultCode === 0) {\n    dispatch(actionCreator(userId));\n  }\n  dispatch(toggleFollowing({ isFollowing: false, userId }));\n};\n\nexport const followTC = (userId: number) => async (dispatch: AppDispatch) => {\n  dispatch(toggleFollowing({ isFollowing: true, userId }));\n  followUnfollow(dispatch, userId, usersAPI.follow.bind(usersAPI), follow);\n};\n\nexport const unfollowTC = (userId: number) => async (dispatch: AppDispatch) => {\n  dispatch(toggleFollowing({ isFollowing: true, userId }));\n  followUnfollow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollow);\n};\n","export * from \"./store\";\nexport * from \"./reducers\";\nexport * from \"./selectors\";\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Pagination_wrapper__23Hb8\",\"pages\":\"Pagination_pages__3mw02\",\"selectPage\":\"Pagination_selectPage__2bB-X\",\"btn\":\"Pagination_btn__2hkWR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userDescription\":\"UserDescription_userDescription__1TcNe\",\"textStyle\":\"UserDescription_textStyle__1Rcjs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myTextarea\":\"MyTextarea_myTextarea__2MRRl\",\"error\":\"MyTextarea_error__NJxqL\",\"errorField\":\"MyTextarea_errorField__1vijC\",\"button\":\"MyTextarea_button__2Y2tk\"};","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport {\n  appSliceReducer,\n  authSliceReducer,\n  dialogsSliceReducer,\n  profileSliceReducer,\n  usersSliceReducer,\n} from \"reduxStore/reducers\";\n\nexport const store = configureStore({\n  reducer: {\n    profile: profileSliceReducer,\n    dialogs: dialogsSliceReducer,\n    users: usersSliceReducer,\n    auth: authSliceReducer,\n    app: appSliceReducer,\n  },\n});\n\nexport type AppRootState = ReturnType<typeof store.getState>;\nexport type AppStore = typeof store;\nexport type AppDispatch = typeof store.dispatch;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1w0lV\",\"links\":\"Footer_links__2pI3S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"login\":\"Header_login__3V3Qa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfilePosts_container__2BJKZ\",\"postsElements\":\"ProfilePosts_postsElements__3f7-3\"};"],"sourceRoot":""}